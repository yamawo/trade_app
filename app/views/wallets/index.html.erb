<div id="wrapper">
    <header class="header">
        <ul>
            <li class="having_money">
                所持金 : <%= @wallets.yen %> 円
            </li>
            <li class="user_name">
                <%= current_user.name %>
            </li>
        </ul>
    </header>
    <div class="container">
        <canvas id="bitcoin_chart"></canvas>
    </div>
    <footer class="footer">
    </footer>
</div>

<%# ここからJS %>


<script>
    var ctx = document.getElementById("bitcoin_chart").getContext('2d');
    var chart = new Chart(ctx, {
        type: 'line',
        data: {
            datasets: [{
                data: [],
                label: 'Price Rating',            // ラベル        
                borderColor: 'rgb(255, 99, 132)', // 線の色
                backgroundColor: 'rgba(255, 99, 132, 0.5)', // 塗りの色
                fill: false,                      // 塗りつぶさない
                lineTension: 0                    // グラフの丸み
            }]
        },
        options: {
            title: {
                text: 'BTC/JPY (' + coincheck + ')', // チャートタイトル
                display: true
            },
            scales: {
                xAxes: [{
                    type: 'realtime' // X軸に沿ってスクロール
                }]
            },
            plugins: {
                streaming: {
                    duration: 480000, // 480000ミリ秒（8分）のデータを表示
                    onRefresh: function(chart) {
                        // request data so that it can be received in a callback function
                        var xhr = new XMLHttpRequest();
                        xhr.open('GET', "/api/bitcoins");
                        xhr.onload = function () {
                            if (xhr.readyState === 4 && xhr.status === 200) {

                                // assume the response is an array of {x: timestamp, y: value} objects
                                var data = data;

                                // append the new data array to the existing chart data
                                Array.prototype.push.apply(chart.data.datasets[0].data, data);

                                // update chart datasets keeping the current animation
                                chart.update({
                                    preservation: true
                                });
                            }
                        };
                        xhr.send();
                    }
                }
            }
        }
    });
</script>
<%= javascript_pack_tag 'hello_vue' %>